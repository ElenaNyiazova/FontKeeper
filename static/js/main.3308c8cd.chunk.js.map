{"version":3,"sources":["common/Input/Input.module.scss","constants/constants.js","components/content-view/content-view.jsx","components/font-picker/font-picker.jsx","components/font-selector/font-selector.jsx","utils.js","components/rules/rules.jsx","components/main-screen/main-screen.jsx","images/not-fond.png","components/page-not-found/page-not-found.jsx","components/AdminScreen/AdminScreen.js","components/Header/Header.js","components/Footer/Footer.js","common/Input/Input.js","components/Profile/AccountInfo/AccountInfo.js","images/mockFontImg.png","components/Profile/FontExample/FontExample.js","components/Profile/MyFonts/MyFonts.js","components/Profile/Profile.js","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","FotnTypes","name","categorie","FontAbcs","key","Sources","ABC","split","mockRules","letters","text","mainRules","ContentView","props","fontName","letter","setLetter","fontstyle","setFontStyle","onLetterClick","evt","selectedLetter","target","id","className","map","item","style","fontWeight","fontStyle","onClick","defaultValue","onChange","selectedStyle","value","console","log","ExampleFontPicker","activeFontFamily","setActiveFontFamily","apiKey","nextFont","family","FontSelector","useState","searchValue","setSearchValue","categories","setCategories","updateCategories","event","currentTarget","checked","filter","filterFonts","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","throttle","action","method","type","abc","source","placeholder","Rules","rulesToRender","useCallback","getRules","to","rule","href","MainScreen","PageNotFound","src","mockImg","alt","width","height","AdminScreen","Header","textDecoration","Footer","Input","label","classes","inputBlock","input","for","AccountInfo","FontExample","MyFonts","elem","Profile","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","ReactDOM","render","history","document","querySelector"],"mappings":"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","file":"static/js/main.3308c8cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"Input_inputBlock__R3r4G\",\"input\":\"Input_input__1hjxL\",\"label\":\"Input_label__Yprb5\"};","export const FotnTypes = [\n  {\n    name: \"С засечками\",\n    categorie: \"serif\",\n  },\n  {\n    name: \"Без засечек\",\n    categorie: \"sans-serif\",\n  },\n  {\n    name: \"Рукописный\",\n    categorie: \"display\",\n  },\n  {\n    name: \"Экранный\",\n    categorie: \"handwriting\",\n  },\n  {\n    name: \"Моноширинный\",\n    categorie: \"monospace\",\n  },\n];\n\nexport const FontAbcs = [\n  {\n    name: \"Кириллица\",\n    key: \"cyrilic\",\n  },\n  {\n    name: \"Латиница\",\n    key: \"latin\",\n  },\n];\n\nexport const Sources = [\n  {\n    name: \"Google fonts\",\n    key: \"google\",\n  },\n  {\n    name: \"Буква к букве\",\n    key: \"local\",\n  },\n  {\n    name: \"Мои\",\n    key: \"mine\",\n  },\n];\n\nexport const API_KEY = \"AIzaSyDF6ou8MWWDhIgD84awJTAvD59wg0XZDPc\";\n\nexport const THROTTLE_TIMEOUT = 1500;\n\nexport const ABCString =\n  \"АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя\";\n\nexport const ABC =\n  \"Аа Бб Вв Гг Дд Ее Ёё Жж Зз Ии Йй Кк Лл Мм Нн Оо Пп Рр Сс Тт Уу Фф Хх Цц Чч Шш Щщ Ъъ Ыы Ьь Ээ Юю Яя\".split(\n    \" \"\n  );\n\nexport const mockRules = [\n  {\n    letters: \"АДЛ\",\n    text: \"Если д и л треугоьные — верхний угол должен быть одинаковым\",\n  },\n  {\n    letters: \"АН\",\n    text: \"Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.\",\n  },\n  {\n    letters: \"АУМИ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"ес еобр еа еэ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"АУМИ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"ес еобр еа еэ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n];\n\nexport const mainRules = [\n  {\n    letters: \"ЖК\",\n    text: \"Диагонали должны крепиться к вертикали одинаковым образом\",\n  },\n  {\n    letters: \"АНАО\",\n    text: \"Соотношение ширин трех базовых форм треугольника, прямоугольника, овала.\",\n  },\n  {\n    letters: \"ДЛ\",\n    text: \"Буквы должны быть одинаковой конструкции, либо треугольник, либо трапеция\",\n  },\n  {\n    letters: \"в\",\n    text: \"Строчная буква в должна повторять конструкцию заглавной, и не выглядитть как курсив\",\n  },\n];\n","import React from 'react';\nimport {ABC} from '../../constants/constants';\nimport PropTypes from 'prop-types';\n\nconst ContentView = props => {\n    const {fontName, letter, setLetter, fontstyle, setFontStyle} = props;\n    \n    const onStyleSelectChange = (evt) => {\n        const selectedStyle = evt.target.value;\n        console.log(selectedStyle);\n\n        setFontStyle(selectedStyle);\n    };\n\n    const onLetterClick = (evt) => {\n        const selectedLetter = evt.target.id;\n\n        setLetter(selectedLetter);\n    };\n\n    return (\n        <div className=\"content\">\n        <section className=\"content_top\">\n                <h2 className=\"visually-hidden\">Heading</h2>\n                <div className=\"content-container\">\n                <ul className=\"content_abc-list\">\n                    {ABC.map((item) => \n                    <li className=\"content_abc-item\" key={item[0]}>\n                        <button style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_abc-letter apply-font\" onClick={onLetterClick} id={item[0]}>{item[0]}</button>\n                        <button style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_abc-letter apply-font\" onClick={onLetterClick} id={item[1]}>{item[1]}</button></li>)}\n                </ul>\n                </div>\n                <div className=\"content_rules\">\n                        {letter && <p style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_rules-letter apply-font\">{letter}</p>}\n                        <p className=\"content_rules-font-name apply-font\">{fontName}</p>\n                        <select className=\"content_rules-select\" defaultValue=\"bold\" onChange={onStyleSelectChange}>\n                            <option value=\"bold\">Bold</option>\n                            <option value=\"normal\">Normal</option>\n                            <option value=\"italic\">Italic</option>\n                        </select>\n                </div>\n            </section>\n       </div>\n      \n    );\n}\n\nContentView.propTypes = {\n    fontName: PropTypes.string,\n    letter:  PropTypes.string,\n    setLetter: PropTypes.func\n};\n\nexport default ContentView;","import React from \"react\";\nimport FontPicker from \"font-picker-react\";\nimport {API_KEY} from '../../constants/constants';\nimport './font-picker.scss';\n\nconst ExampleFontPicker = props => {\n  const {activeFontFamily, setActiveFontFamily} = props;\n\n  return (\n    <div className=\"example-font-picker\">\n      <FontPicker\n        apiKey={API_KEY}\n        activeFontFamily={activeFontFamily}\n        onChange={(nextFont) => setActiveFontFamily(nextFont.family)}\n      />\n    </div>\n  );\n};\n\nexport default ExampleFontPicker;\n \n","import React, { useState } from \"react\";\nimport ExampleFontPicker from '../font-picker/font-picker';\nimport {FotnTypes, FontAbcs, Sources, THROTTLE_TIMEOUT} from '../../constants/constants';\nimport {throttle} from '../../utils';\n\nconst FontSelector = props => {\n  const {activeFontFamily, setActiveFontFamily} = props;\n  const [searchValue, setSearchValue] = useState(null);\n  const [categories, setCategories] = useState([]);\n\n  const updateCategories = (event) => {\n    if (event.currentTarget.checked) {\n      setCategories([...categories, event.currentTarget.id]);\n    } else {\n      setCategories(categories.filter((item) => item !== event.currentTarget.id))\n    }\n  };\n\n  const updateSearchValue = value => {\n    setSearchValue(value);\n  };\n\n  const filterFonts = throttle(updateSearchValue, THROTTLE_TIMEOUT);\n\n  const searchFont = event => {\n\t\tconst { value } = event.target;\n\t\treturn filterFonts(value);\n\t};\n\n    return (\n        <div className=\"font-selector\">\n        <form action={searchValue} method=\"post\">\n          <p className=\"form-item\">\n            {FotnTypes.map((type) => \n            <label key={type.categorie}>\n                <input type=\"checkbox\" id={type.categorie} name={type.categorie} onChange={updateCategories} />\n                 {type.name}\n            </label>)}\n          </p>\n          <hr />\n          <p className=\"form-item\">\n              {FontAbcs.map((abc) => \n              <label key={abc.key}>\n                <input type=\"checkbox\" id={abc.key} name={abc.key} />\n                {abc.name}\n              </label>\n            )}\n          </p>\n          <hr />\n          <p className=\"form-item\">\n          {Sources.map((source) => \n              <label key={source.key}>\n                <input type=\"checkbox\" id={source.key} name={source.key} />\n                {source.name}\n              </label>\n            )}\n          </p>\n          <p className=\"form-item\">\n              <input className=\"search-input\" type=\"search\" placeholder=\"Поиск по названию\" onChange={searchFont} />\n              <ExampleFontPicker activeFontFamily={activeFontFamily} setActiveFontFamily={setActiveFontFamily} />\n          </p>\n          <p className=\"form-item\">\n            <button className=\"upload-btn\" type=\"button\" name=\"upload\">Загрузить свой шрифт</button>\n            <span className=\"upload-hint\">Требуется регистрация</span>\n          </p>\n        </form>\n      </div>\n    );\n};\n\nexport default FontSelector;","export const throttle = (func, ms) => {\n  let isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper() {\n    if (isThrottled) {\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(this, arguments);\n\n    isThrottled = true;\n\n    setTimeout(function () {\n      isThrottled = false;\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n};\n","import React, {useCallback} from \"react\";\nimport PropTypes from 'prop-types';\nimport {mockRules, mainRules} from '../../constants/constants';\nimport './Rules.scss';\nimport { Link } from \"react-router-dom\";\n\n\nconst Rules = props => {\n    const {letter, setLetter, fontName} = props;\n\n    const onBackClick = () => {\n        setLetter(null);\n    };\n\n    // TODO: implement API request\n    const getRules = useCallback(\n        () => {\n            return letter ? mockRules : mainRules;\n        },\n        [letter],\n      );\n  \n    \n    const rulesToRender = getRules();\n\n    return (\n    <div className=\"content_rules-cards\">\n        {letter ? (<button onClick={onBackClick} className=\"link\">Вернуться к основным правилам</button>):(<Link className=\"link\" to=\"/\">Правила для каждой буквы</Link>)}\n        <ul className=\"content_rules-cardlist masonry-layout\">\n            {rulesToRender.map((rule) => <li className=\"content_rules-cardItem masonry-layout__panel\">\n                <h3 className=\"content_rules-letters apply-font\">{rule.letters}</h3>\n                <p className=\"content_rules-text-sm\">{rule.text}</p>\n            </li>)}\n            <li className=\"content_rules-cardItem masonry-layout__panel\">\n                <h3 className=\"content_rules-sourcetitle\">{fontName} из библиотеки Google fonts</h3>\n                <p className=\"content_rules-text-sm\">{fontName} has a dual nature. It has a mechanical skeleton and the forms are largely geometric. At the same time, the font features friendly and open curves. While some grotesks distort their letterforms to force a rigid rhythm, {fontName} doesn’t compromise, allowing letters to be settled into their natural width. This makes for a more natural reading rhythm more commonly found in humanist and serif types.\n                   This is the regular family, which can be used alongside the {fontName} Condensed family and the {fontName} Slab family.\n                   To contribute, see github.com/google/{fontName}</p>\n                   <a href=\"https://fonts.google.com/\" className=\"content_rules-sourcelink\">Перейти на страницу Google Fonts</a>\n            </li>\n        </ul>\n    </div>);\n};\n\nRules.propTypes = {\n    fontName: PropTypes.string,\n    letter: PropTypes.string,\n};\n\nexport default Rules;\n","import React, {useState} from 'react';\nimport ContentView  from '../content-view/content-view';\nimport FontSelector from '../font-selector/font-selector';\nimport Rules from '../rules/rules';\n\nconst MainScreen = () => {\n    const [letter, setLetter] = useState(null);\n    const [fontstyle, setFontStyle] = useState('bold');\n    const [activeFontFamily, setActiveFontFamily] = useState(\"Open Sans\");\n    \n    return (\n        <main className='main-content'>\n            <div className='main-content-top'>\n                <div className=\"container\">\n                <ContentView \n                    letter={letter} \n                    setLetter={setLetter} \n                    fontstyle={fontstyle}\n                    setFontStyle={setFontStyle}\n                    fontName={activeFontFamily}\n                />\n                </div>\n                \n            </div>\n\n            <div className=\"sidebar\">\n                <FontSelector activeFontFamily={activeFontFamily} setActiveFontFamily={setActiveFontFamily} />\n            </div>\n            \n            <div className='main-content-bottom'>\n            <div className=\"container\">\n            <Rules letter={letter} setLetter={setLetter} fontName={activeFontFamily} />\n            </div>\n                \n            </div>\n        </main>\n    );\n};\n\nexport default MainScreen;","export default __webpack_public_path__ + \"static/media/not-fond.38612741.png\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport '../../App.scss';\nimport './Page-not-found.scss';\n\nimport mockImg from '../../images/not-fond.png';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"container not-found\">\n      <div className=\"not-found__bg-image\">\n        <img\n            src={mockImg}\n            alt=\"Page not found\"\n            width=\"600\"\n            height=\"400\"\n        />\n      </div>\n      <Link className=\"not-found__link\" to=\"/\">\n        Back home\n      </Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;","import React from \"react\";\n// import Toggle from '../../common/Toggle'\nimport \"./AdminScreen.scss\";\n\nconst AdminScreen = () => {\n  return (\n    <div className=\"adminScreen\">\n      <div className=\"container\">\n        <div className=\"adminControls\">\n          <nav className=\"adminScreenNav\">\n            <ul>\n              <li className=\"adminNavItem h3 active\">\n                <a className=\"adminLink\" href=\"#\">\n                  Правила\n                </a>\n              </li>\n              <li className=\"adminNavItem h3\">\n                <a className=\"adminLink\" href=\"#\">\n                  Библиотека шрифтов\n                </a>\n              </li>\n              <li className=\"adminNavItem h3\">\n                <a className=\"adminLink\" href=\"#\">\n                  Предложения шрифтов\n                </a>\n              </li>\n              <li className=\"adminNavItem h3\">\n                <a className=\"adminLink\" href=\"#\">\n                  Пользователи\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          <input type=\"text\" />\n        </div>\n\n        <ul className=\"adminTable\">\n          <li className=\"adminTable-item table-header\">\n            <p className=\"mainLetter table-cell\">Основные буквы </p>\n            <p className=\"extraLetter table-cell\">Дополнительные буквы</p>\n            <p className=\"rule table-cell\">Правило</p>\n            <p className=\"category table-cell\">Категория</p>\n            <p className=\"importance table-cell\">Важность</p>\n            <p className=\"visibility table-cell\">Видимость</p>\n            <p className=\"actions table-cell\">Действия</p>\n          </li>\n          <li className=\"adminTable-item\">\n            <p className=\"mainLetter table-cell\">АНО</p>\n            <p className=\"extraLetter table-cell\">АНАО</p>\n            <p className=\"rule table-cell\">\n              Соотношение ширин трех базовых форм треугольника, прямоугольника,\n              овала\n            </p>\n            <p className=\"category table-cell\">Форма букв</p>\n            <p className=\"importance table-cell\">10</p>\n            <p className=\"visibility table-cell\">АНО</p>\n            <p className=\"actions table-cell\">АНО</p>\n          </li>\n          <li className=\"adminTable-item\">\n            <p className=\"mainLetter table-cell\">АНО</p>\n            <p className=\"extraLetter table-cell\">АНАО</p>\n            <p className=\"rule table-cell\">Соотношение овала</p>\n            <p className=\"category table-cell\">Форма букв</p>\n            <p className=\"importance table-cell\">10</p>\n            <p className=\"visibility table-cell\">АНО</p>\n            <p className=\"actions table-cell\">АНО</p>\n          </li>\n          <li className=\"adminTable-item\">\n            <p className=\"mainLetter table-cell\">АНО</p>\n            <p className=\"extraLetter table-cell\">АНАО</p>\n            <p className=\"rule table-cell\">\n              Соотношение ширин трех базовых форм треугольника, прямоугольника,\n              овала Соотношение ширин трех базовых форм треугольника,\n              прямоугольника, овала\n            </p>\n            <p className=\"category table-cell\">Форма букв</p>\n            <p className=\"importance table-cell\">10</p>\n            <p className=\"visibility table-cell\">АНО</p>\n            <p className=\"actions table-cell\">АНО</p>\n          </li>\n        </ul>\n\n        <button className=\"button\">Добавить правило</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <Link\n          style={{\n            textDecoration: \"none\",\n          }}\n          to=\"/FontKeeper\"\n        >\n          <h1 className=\"main-title\">\n            <span className=\"main-title_bg\">Б</span>уква к{\" \"}\n            <span className=\"main-title_sm\">б</span>укве\n          </h1>\n        </Link>\n        <p className=\"user-nav\">\n          <Link className=\"main-link\" to=\"/FontKeeper/admin\">\n            Администрирование\n          </Link>\n          <Link className=\"main-link\" to=\"/FontKeeper/profile\">\n            Профиль\n          </Link>\n          <Link className=\"main-link\" to=\"/\">\n            Выход\n          </Link>\n        </p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <h2 className=\"main-title\">\n          <span className=\"main-title_bg\">Б</span>уква к{\" \"}\n          <span className=\"main-title_sm\">б</span>укве\n        </h2>\n        <Link className=\"main-link\" to=\"/\">\n          Написать разработчикам\n        </Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\nimport classes from './Input.module.scss'\n\nconst Input = ({name, label, placeholder, className}) => \n    <div className={classes.inputBlock + ` ${className}`}>\n        <input className={classes.input + ' regular'} name={name} id={name} type=\"text\" placeholder={placeholder} />\n        <label className={classes.label + ' regular'} for={name}>{label}</label>\n    </div>\n\nexport default Input\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./AccountInfo.scss\";\nimport Input from \"../../../common/Input/Input\";\n\nconst AccountInfo = () => {\n  return (\n    <section className=\"accountInfo\">\n      <h3 className=\"h3\">Аккаунт</h3>\n\n      <div className=\"inputsBlock\">\n        <Input\n          className=\"input\"\n          name=\"name\"\n          label=\"Как к вам обращаться?\"\n          placeholder=\"Повелитель шрифтов\"\n        />\n        <Input\n          className=\"input\"\n          name=\"email\"\n          label=\"Font-keeper@epam.com\"\n          placeholder=\"E-mail\"\n        />\n        <Link className=\"link\" to=\"/\">\n          Изменить пароль\n        </Link>\n        <button className=\"button secondary\">Сохранить</button>\n      </div>\n    </section>\n  );\n};\n\nexport default AccountInfo;\n","export default __webpack_public_path__ + \"static/media/mockFontImg.c1e0b8c9.png\";","import React from \"react\";\nimport \"./FontExample.scss\";\n\nimport mockImg from \"../../../images/mockFontImg.png\";\n\nconst FontExample = () => (\n  <div className=\"fontExample\">\n    <img src={mockImg} className=\"fontExampleImg\" alt=\"Some meaningful text\" />\n    <p className=\"fontDescription regular\">\n      We make stunning and cool design font type which suitable for any project\n      purpose for your business. Feel free to visit our store at\n    </p>\n  </div>\n);\n\nexport default FontExample;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MyFonts.scss\";\n\nconst MyFonts = () => {\n  return (\n    <main className=\"myFonts\">\n      <h3 className=\"h3\">Мои шрифты</h3>\n\n      <ul className=\"fontsList\">\n        {[1, 2, 3, 4].map((elem) => (\n          <li className=\"fontsList-item\">\n            <p className=\"fontName\">\n              <Link className=\"fontName link\" to=\"/\">\n                Obituary\n              </Link>\n            </p>\n            <p className=\"fontType\">Без засечек, Моноширинный</p>\n            <p className=\"lang\">Кирилица, Латиница</p>\n            <div className=\"about\">\n              <p className=\"usage\">Free For Personal Use</p>\n              <Link className=\"fontLink link\" to=\"/\">\n                https://pixelify.net...\n              </Link>\n            </div>\n            <div className=\"controls\">\n              <button className=\"editBtn\"></button>\n              <button className=\"deleteBtn\"></button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <button className=\"button\">Добавить свой шрифт</button>\n    </main>\n  );\n};\n\nexport default MyFonts;\n","import React from 'react'\nimport AccountInfo from './AccountInfo/AccountInfo'\nimport FontExample from './FontExample/FontExample'\nimport MyFonts from './MyFonts/MyFonts'\n\nimport './Profile.scss'\n\nconst Profile = () => {\n    return (\n        <div className=\"Profile\">\n            <div className=\"container\">\n                <AccountInfo/>\n                \n                <div className=\"mainContent\">\n                    <MyFonts />\n                    <FontExample />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainScreen from './components/main-screen/main-screen';\nimport PageNotFound from './components/page-not-found/page-not-found';\nimport './App.scss';\nimport AdminScreen from './components/AdminScreen/AdminScreen';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Profile from './components/Profile/Profile';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n        <Switch>\n          <Route exact path='/FontKeeper'>\n            <MainScreen />\n          </Route>\n          <Route exact path='/FontKeeper/profile'>\n            <Profile />\n          </Route>\n          <Route exact path='/FontKeeper/admin'>\n            <AdminScreen />\n          </Route>\n          <Route>\n            <PageNotFound />\n          </Route>\n        </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst browserHistory = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={browserHistory}>\n    <App />\n  </Router>,\n  document.querySelector(`#root`)\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}