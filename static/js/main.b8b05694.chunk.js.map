{"version":3,"sources":["common/Checkbox/Checkbox.module.scss","common/Toggle/Toggle.module.scss","common/SearchBar/SearchBar.module.scss","common/Input/Input.module.scss","constants/constants.js","components/content-view/content-view.jsx","components/font-picker/font-picker.jsx","common/Checkbox/Checkbox.js","common/SearchBar/SearchBar.js","components/font-selector/font-selector.jsx","utils.js","components/rules/rules.jsx","components/main-screen/main-screen.jsx","images/not-fond.png","components/page-not-found/page-not-found.jsx","common/Toggle/Toggle.js","components/RulesScreen/Rule/Rule.js","common/AdminControls/AdminControls.js","components/RulesScreen/RulesScreen.js","components/Header/Header.js","components/Footer/Footer.js","common/Input/Input.js","components/Profile/AccountInfo/AccountInfo.js","images/mockFontImg.png","components/Profile/FontExample/FontExample.js","components/Profile/MyFonts/MyFonts.js","components/Profile/Profile.js","components/LibraryScreen/Font/Font.js","components/LibraryScreen/LibraryScreen.js","components/SuggestionsScreen/Suggestion/Suggestion.js","components/SuggestionsScreen/SuggestionsScreen.js","components/UsersScreen/User/User.js","components/UsersScreen/UsersScreen.js","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","FotnTypes","name","categorie","FontAbcs","key","Sources","ABC","split","mockRules","letters","text","mainRules","USERS_MOCK","email","suggested","approved","active","SUGGESTIONS_MOCK","fontName","license","source","user","type","lang","LIBRARY_MOCK","RULES_MOCK","mainLetters","extraLetters","rule","category","importance","visibility","ContentView","props","letter","setLetter","fontstyle","setFontStyle","onLetterClick","evt","selectedLetter","target","id","className","map","item","style","fontWeight","fontStyle","onClick","defaultValue","onChange","selectedStyle","value","console","log","ExampleFontPicker","activeFontFamily","setActiveFontFamily","apiKey","nextFont","family","Checkbox","children","classes","label","input","checkMark","box","SearchBar","placeholder","searchBar","searchIcon","FontSelector","useState","searchValue","setSearchValue","categories","setCategories","updateCategories","event","currentTarget","checked","filter","filterFonts","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","throttle","action","method","abc","Rules","rulesToRender","useCallback","getRules","to","i","href","MainScreen","PageNotFound","src","mockImg","alt","width","height","Toggle","setActive","Rule","handleDelete","AdminControls","AdminScreen","splice","Header","auth","setAuth","textDecoration","Footer","Input","inputBlock","htmlFor","AccountInfo","FontExample","MyFonts","elem","Profile","Font","font","LibraryScreen","useEffect","fetch","then","res","json","result","catch","err","Suggestion","suggestion","SuggestionsScreen","User","UsersScreen","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","browserHistory","createBrowserHistory","ReactDOM","render","history","document","querySelector"],"mappings":"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","file":"static/js/main.b8b05694.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Checkbox_label__1f2Jk\",\"box\":\"Checkbox_box__2D6Su\",\"checkMark\":\"Checkbox_checkMark__iuLeU\",\"input\":\"Checkbox_input__6tgAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Toggle_label__2PhGn\",\"box\":\"Toggle_box__3h-pj\",\"checkMark\":\"Toggle_checkMark__56eUU\",\"input\":\"Toggle_input__3iM4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__3RX1s\",\"searchBar\":\"SearchBar_searchBar__3FShc\",\"searchIcon\":\"SearchBar_searchIcon__2Oxdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"Input_inputBlock__R3r4G\",\"input\":\"Input_input__1hjxL\",\"label\":\"Input_label__Yprb5\"};","export const FotnTypes = [\n  {\n    name: \"С засечками\",\n    categorie: \"serif\",\n  },\n  {\n    name: \"Без засечек\",\n    categorie: \"sans-serif\",\n  },\n  {\n    name: \"Рукописный\",\n    categorie: \"display\",\n  },\n  {\n    name: \"Экранный\",\n    categorie: \"handwriting\",\n  },\n  {\n    name: \"Моноширинный\",\n    categorie: \"monospace\",\n  },\n];\n\nexport const FontAbcs = [\n  {\n    name: \"Кириллица\",\n    key: \"cyrilic\",\n  },\n  {\n    name: \"Латиница\",\n    key: \"latin\",\n  },\n];\n\nexport const Sources = [\n  {\n    name: \"Google fonts\",\n    key: \"google\",\n  },\n  {\n    name: \"Буква к букве\",\n    key: \"local\",\n  },\n  {\n    name: \"Мои\",\n    key: \"mine\",\n  },\n];\n\nexport const API_KEY = \"AIzaSyDF6ou8MWWDhIgD84awJTAvD59wg0XZDPc\";\n\nexport const THROTTLE_TIMEOUT = 1500;\n\nexport const ABCString =\n  \"АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя\";\n\nexport const ABC =\n  \"Аа Бб Вв Гг Дд Ее Ёё Жж Зз Ии Йй Кк Лл Мм Нн Оо Пп Рр Сс Тт Уу Фф Хх Цц Чч Шш Щщ Ъъ Ыы Ьь Ээ Юю Яя\".split(\n    \" \"\n  );\n\nexport const mockRules = [\n  {\n    letters: \"АДЛ\",\n    text: \"Если д и л треугоьные — верхний угол должен быть одинаковым\",\n  },\n  {\n    letters: \"АН\",\n    text: \"Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.\",\n  },\n  {\n    letters: \"АУМИ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"ес еобр еа еэ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"АУМИ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n  {\n    letters: \"ес еобр еа еэ\",\n    text: \"Cмотрим на угод наклонных штрихов\",\n  },\n];\n\nexport const mainRules = [\n  {\n    letters: \"ЖК\",\n    text: \"Диагонали должны крепиться к вертикали одинаковым образом\",\n  },\n  {\n    letters: \"АНАО\",\n    text: \"Соотношение ширин трех базовых форм треугольника, прямоугольника, овала.\",\n  },\n  {\n    letters: \"ДЛ\",\n    text: \"Буквы должны быть одинаковой конструкции, либо треугольник, либо трапеция\",\n  },\n  {\n    letters: \"в\",\n    text: \"Строчная буква в должна повторять конструкцию заглавной, и не выглядитть как курсив\",\n  },\n];\n\nexport const USERS_MOCK = [\n  {name: 'Повелитель шрифтов', email: 'Font-keeper@epam.com', suggested: '2', approved: '2', active: true},\n  {name: 'Мария Притчина', email: 'debra.holt@example.com', suggested: '2', approved: '1', active: false},\n  {name: 'Светлана Тереньтьева', email: 'michelle.rivera@example.com', suggested: '0', approved: '0', active: false},\n  {name: 'Богдан Климов', email: 'jackson.graham@example.com', suggested: '102', approved: '30', active: true},\n  {name: 'Марина Харина', email: 'bill.sanders@example.com', suggested: '0', approved: '0', active: false},\n  {name: 'Елена Ниязова', email: 'michael.mitc@example.com', suggested: '33', approved: '4', active: true},\n  {name: 'Виталий Колесов', email: 'debra.holt@example.com', suggested: '9', approved: '8', active: true},\n]\n\nexport const SUGGESTIONS_MOCK = [\n  {fontName: 'Perfect coffee', license: 'Демо версия', source: 'https://www.behance.net/gallery/105925109/Worthbites-Display-Font', user: 'Богдан Климов', type: 'Без засечек, моноширинный', lang: 'Латиница, Кириллица'},\n  {fontName: 'Exoner', license: 'Платный', source: 'https://www.fontspace.com/glory-lake-font-f67791', user: 'Марина Харина', type: 'Без засечек, моноширинный', lang: 'Кириллица'},\n  {fontName: 'Keway', license: 'Платный', source: 'https://www.fontspace.com/batfide-signature-font-f67729', user: 'Елена Ниязова', type: 'Без засечек, моноширинный', lang: 'Кириллица'},\n]\n\nexport const LIBRARY_MOCK = [\n  {fontName: 'Obituary', license: 'Свободно распространяемый', source: 'https://pixelify.net/artist/creatypestudio/', type: 'Без засечек, моноширинный', lang: 'Латиница, Кириллица'},\n  {fontName: 'Veggy', license: 'Неизвестно', source: 'https://www.behance.net/gallery/105925109/Worthbites-Display-Font', type: 'Без засечек, моноширинный', lang: 'Кириллица'},\n  {fontName: 'Perfect coffee', license: 'Демо версия', source: 'https://www.behance.net/gallery/105925109/Worthbites-Display-Font', type: 'Без засечек, моноширинный', lang: 'Латиница, Кириллица'},\n]\n\nexport const RULES_MOCK = [\n  {mainLetters: 'АНО', extraLetters: 'АНАО', rule: 'Соотношение ширин трех базовых форм треугольника, прямоугольника, овала', category: 'Форма букв', importance: '10', visibility: true},\n  {mainLetters: 'З', extraLetters: 'ЗЭС', rule: 'Засечки или капли на концах штрихов должны совпадать', category: 'Форма букв', importance: '8', visibility: false},\n  {mainLetters: 'З', extraLetters: 'ЗЭ', rule: 'Форма перекладины должна совпадать', category: 'Форма букв', importance: '8', visibility: true},\n  {mainLetters: 'З', extraLetters: 'ЗВ', rule: 'Правые полуовалы должны быть похожи. Нижний полуовал в может быть чуть больше', category: 'Форма букв', importance: '8', visibility: true},\n]","import React from 'react';\nimport {ABC} from '../../constants/constants';\nimport PropTypes from 'prop-types';\n\nconst ContentView = props => {\n    const {fontName, letter, setLetter, fontstyle, setFontStyle} = props;\n    \n    const onStyleSelectChange = (evt) => {\n        const selectedStyle = evt.target.value;\n        console.log(selectedStyle);\n\n        setFontStyle(selectedStyle);\n    };\n\n    const onLetterClick = (evt) => {\n        const selectedLetter = evt.target.id;\n\n        setLetter(selectedLetter);\n    };\n\n    return (\n        <div className=\"content\">\n        <section className=\"content_top\">\n                <h2 className=\"visually-hidden\">Heading</h2>\n                <div className=\"content-container\">\n                <ul className=\"content_abc-list\">\n                    {ABC.map((item) => \n                    <li className=\"content_abc-item\" key={item[0]}>\n                        <button style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_abc-letter apply-font\" onClick={onLetterClick} id={item[0]}>{item[0]}</button>\n                        <button style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_abc-letter apply-font\" onClick={onLetterClick} id={item[1]}>{item[1]}</button></li>)}\n                </ul>\n                </div>\n                <div className=\"content_rules\">\n                        {letter && <p style={{\n                            fontWeight: `${fontstyle === 'bold' ? 'bold': 'normal'}`,\n                            fontStyle: `${fontstyle}`\n                        }} className=\"content_rules-letter apply-font\">{letter}</p>}\n                        <p className=\"content_rules-font-name apply-font\">{fontName}</p>\n                        <select className=\"content_rules-select\" defaultValue=\"bold\" onChange={onStyleSelectChange}>\n                            <option value=\"bold\">Bold</option>\n                            <option value=\"normal\">Normal</option>\n                            <option value=\"italic\">Italic</option>\n                        </select>\n                </div>\n            </section>\n       </div>\n      \n    );\n}\n\nContentView.propTypes = {\n    fontName: PropTypes.string,\n    letter:  PropTypes.string,\n    setLetter: PropTypes.func\n};\n\nexport default ContentView;","import React from \"react\";\nimport FontPicker from \"font-picker-react\";\nimport {API_KEY} from '../../constants/constants';\nimport './font-picker.scss';\n\nconst ExampleFontPicker = props => {\n  const {activeFontFamily, setActiveFontFamily} = props;\n\n  return (\n    <div className=\"example-font-picker\">\n      <FontPicker\n        apiKey={API_KEY}\n        activeFontFamily={activeFontFamily}\n        onChange={(nextFont) => setActiveFontFamily(nextFont.family)}\n      />\n    </div>\n  );\n};\n\nexport default ExampleFontPicker;\n \n","import React from 'react'\nimport classes from './Checkbox.module.scss'\n\nconst Checkbox = ({children}) => \n    <div>\n        <label className={classes.label}>\n            <input className={classes.input} type=\"checkbox\"/>\n            <div className={classes.checkMark}></div>\n            <p className={classes.box}>{children}</p>\n        </label>\n    </div>\n\nexport default Checkbox\n","import React from 'react'\nimport classes from './SearchBar.module.scss'\n\nconst SearchBar = ({placeholder}) => {\n    return (\n        <div className={classes.searchBar + ' regular searchBar'}>\n            <input className={classes.input} type=\"text\" placeholder={placeholder} />\n            <div className={classes.searchIcon}></div>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React, { useState } from \"react\";\nimport ExampleFontPicker from '../font-picker/font-picker';\nimport {FotnTypes, FontAbcs, Sources, THROTTLE_TIMEOUT} from '../../constants/constants';\nimport {throttle} from '../../utils';\nimport Checkbox from \"../../common/Checkbox/Checkbox\";\nimport SearchBar from \"../../common/SearchBar/SearchBar\";\n\nconst FontSelector = props => {\n  const {activeFontFamily, setActiveFontFamily} = props;\n  const [searchValue, setSearchValue] = useState(null);\n  const [categories, setCategories] = useState([]);\n\n  const updateCategories = (event) => {\n    if (event.currentTarget.checked) {\n      setCategories([...categories, event.currentTarget.id]);\n    } else {\n      setCategories(categories.filter((item) => item !== event.currentTarget.id))\n    }\n  };\n\n  const updateSearchValue = value => {\n    setSearchValue(value);\n  };\n\n  const filterFonts = throttle(updateSearchValue, THROTTLE_TIMEOUT);\n\n  const searchFont = event => {\n\t\tconst { value } = event.target;\n\t\treturn filterFonts(value);\n\t};\n\n    return (\n      <div className=\"font-selector\">\n        <form action={searchValue} method=\"post\">\n          <p className=\"formInput\">\n            {FotnTypes.map((type) => \n              <Checkbox id={type.categorie} name={type.categorie} onChange={updateCategories} key={type.categorie}>\n                {type.name}\n              </Checkbox>\n            )}\n          </p>\n          <hr className=\"formDivider\" />\n          <p className=\"formInput\">\n              {FontAbcs.map((abc) => \n              <Checkbox id={abc.key} name={abc.key} key={abc.key}>\n                {abc.name}\n              </Checkbox>\n            )}\n          </p>\n          <hr className=\"formDivider\" />\n          <p className=\"formInput\">\n          {Sources.map((source) => \n            <Checkbox type=\"checkbox\" id={source.key} name={source.key} key={source.key}>\n              {source.name}\n            </Checkbox>\n          )}\n          </p>\n          <p className=\"formInput\">\n              <SearchBar className=\"fontSearch\" placeholder=\"Поиск по названию\" onChange={searchFont} />\n\n              <ExampleFontPicker activeFontFamily={activeFontFamily} setActiveFontFamily={setActiveFontFamily} />\n          </p>\n          <p className=\"formInput\">\n            <button className=\"upload-btn\" type=\"button\" name=\"upload\">Загрузить свой шрифт</button>\n            <span className=\"upload-hint\">Требуется регистрация</span>\n          </p>\n        </form>\n      </div>\n    );\n};\n\nexport default FontSelector;","export const throttle = (func, ms) => {\n  let isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper() {\n    if (isThrottled) {\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(this, arguments);\n\n    isThrottled = true;\n\n    setTimeout(function () {\n      isThrottled = false;\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n};\n","import React, {useCallback} from \"react\";\nimport PropTypes from 'prop-types';\nimport {mockRules, mainRules} from '../../constants/constants';\nimport './Rules.scss';\nimport { Link } from \"react-router-dom\";\n\n\nconst Rules = props => {\n    const {letter, setLetter, fontName} = props;\n\n    const onBackClick = () => {\n        setLetter(null);\n    };\n\n    // TODO: implement API request\n    const getRules = useCallback(\n        () => {\n            return letter ? mockRules : mainRules;\n        },\n        [letter],\n      );\n  \n    \n    const rulesToRender = getRules();\n\n    return (\n    <div className=\"content_rules-cards\">\n        {letter ? (<button onClick={onBackClick} className=\"link\">Вернуться к основным правилам</button>):(<Link className=\"link\" to=\"/FontKeeper\">Правила для каждой буквы</Link>)}\n        <ul className=\"content_rules-cardlist masonry-layout\">\n            {rulesToRender.map((rule, i) => <li key={i} className=\"content_rules-cardItem masonry-layout__panel\">\n                <h3 className=\"content_rules-letters apply-font\">{rule.letters}</h3>\n                <p className=\"content_rules-text-sm\">{rule.text}</p>\n            </li>)}\n            <li className=\"content_rules-cardItem masonry-layout__panel\">\n                <h3 className=\"content_rules-sourcetitle\">{fontName} из библиотеки Google fonts</h3>\n                <p className=\"content_rules-text-sm\">{fontName} has a dual nature. It has a mechanical skeleton and the forms are largely geometric. At the same time, the font features friendly and open curves. While some grotesks distort their letterforms to force a rigid rhythm, {fontName} doesn’t compromise, allowing letters to be settled into their natural width. This makes for a more natural reading rhythm more commonly found in humanist and serif types.\n                   This is the regular family, which can be used alongside the {fontName} Condensed family and the {fontName} Slab family.\n                   To contribute, see github.com/google/{fontName}</p>\n                   <a href=\"https://fonts.google.com/\" className=\"content_rules-sourcelink\">Перейти на страницу Google Fonts</a>\n            </li>\n        </ul>\n    </div>);\n};\n\nRules.propTypes = {\n    fontName: PropTypes.string,\n    letter: PropTypes.string,\n};\n\nexport default Rules;\n","import React, {useState} from 'react';\nimport ContentView  from '../content-view/content-view';\nimport FontSelector from '../font-selector/font-selector';\nimport Rules from '../rules/rules';\n\nconst MainScreen = () => {\n    const [letter, setLetter] = useState(null);\n    const [fontstyle, setFontStyle] = useState('bold');\n    const [activeFontFamily, setActiveFontFamily] = useState(\"Open Sans\");\n    \n    return (\n        <main className='main-content'>\n            <div className='main-content-top'>\n                <div className=\"container\">\n                <ContentView \n                    letter={letter} \n                    setLetter={setLetter} \n                    fontstyle={fontstyle}\n                    setFontStyle={setFontStyle}\n                    fontName={activeFontFamily}\n                />\n                </div>\n                \n            </div>\n\n            <div className=\"sidebar\">\n                <FontSelector activeFontFamily={activeFontFamily} setActiveFontFamily={setActiveFontFamily} />\n            </div>\n            \n            <div className='main-content-bottom'>\n                \n            <div className=\"container\">\n                <Rules letter={letter} setLetter={setLetter} fontName={activeFontFamily} />\n            </div>\n                \n            </div>\n        </main>\n    );\n};\n\nexport default MainScreen;","export default __webpack_public_path__ + \"static/media/not-fond.38612741.png\";","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport '../../App.scss';\nimport './Page-not-found.scss';\n\nimport mockImg from '../../images/not-fond.png';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"container not-found\">\n      <div className=\"not-found__bg-image\">\n        <img\n            src={mockImg}\n            alt=\"Page not found\"\n            width=\"600\"\n            height=\"400\"\n        />\n      </div>\n      <Link className=\"not-found__link\" to=\"/FontKeeper\">\n        Back home\n      </Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;","import React, {useState} from 'react'\nimport classes from './Toggle.module.scss'\n\nconst Toggle = ({checked}) => {\n    const [active, setActive] = useState(checked)\n\n    const handleChange = () => {\n        setActive(!active)\n    }\n\n    return <div>\n        <label className={classes.label}>\n            <input className={classes.input} onChange={handleChange} checked={active} type=\"checkbox\"/>\n\n            <div className={classes.box}>\n                <div className={classes.checkMark}></div>\n            </div>\n        </label>\n    </div>\n}\n\nexport default Toggle\n","import React from 'react'\nimport Toggle from \"../../../common/Toggle/Toggle\";\nimport './Rule.scss'\n\nconst Rule = props => {\n    const {handleDelete, mainLetters, extraLetters, rule, category, importance, visibility} = props.rule\n\n    return <li className=\"adminTable-item\">\n        <p className=\"mainLetter table-cell\">{mainLetters}</p>\n        <p className=\"extraLetter table-cell\">{extraLetters}</p>\n        <p className=\"rule table-cell\">{rule}</p>\n        <p className=\"category table-cell\">{category}</p>\n        <p className=\"importance table-cell\">{importance}</p>\n        <div className=\"visibility table-cell\"><Toggle checked={visibility} /></div>\n        <p className=\"actions table-cell\">\n            <button className=\"editBtn\"></button>\n            <button className=\"deleteBtn\" onClick={handleDelete}></button>\n        </p>\n    </li>\n}\n\nexport default Rule\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport SearchBar from '../SearchBar/SearchBar'\n\nconst AdminControls = () => \n    <div className=\"adminControls\">\n        <nav className=\"adminScreenNav\">\n            <ul>\n                <li className=\"adminNavItem h3\">\n                    <NavLink className=\"adminLink\" to=\"/FontKeeper/admin/rules\">\n                        Правила\n                    </NavLink>\n                </li>\n                <li className=\"adminNavItem h3\">\n                    <NavLink className=\"adminLink\" to=\"/FontKeeper/admin/library\">\n                        Библиотека шрифтов\n                    </NavLink>\n                </li>\n                <li className=\"adminNavItem h3\">\n                    <NavLink className=\"adminLink\" to=\"/FontKeeper/admin/suggestions\">\n                        Предложения шрифтов\n                    </NavLink>\n                </li>\n                <li className=\"adminNavItem h3\">\n                    <NavLink className=\"adminLink\" to=\"/FontKeeper/admin/users\">\n                        Пользователи\n                    </NavLink>\n                </li>\n            </ul>\n        </nav>\n\n        <SearchBar placeholder=\"Поиск правила по букве, названию или тексту\" />\n    </div>\n\nexport default AdminControls\n","import React from \"react\";\nimport \"./RulesScreen.scss\";\nimport Rule from \"./Rule/Rule\";\nimport AdminControls from \"../../common/AdminControls/AdminControls\";\nimport { RULES_MOCK } from \"../../constants/constants\";\n\nconst AdminScreen = () => {\n  const handleDelete = () => {\n    RULES_MOCK = RULES_MOCK.splice(1,1)\n  }\n\n  return (\n    <div className=\"adminScreen\">\n      <div className=\"container\">\n        <AdminControls />\n\n        <ul className=\"adminTable\">\n          <li className=\"adminTable-item table-header\">\n            <p className=\"mainLetter table-cell\">Основные буквы </p>\n            <p className=\"extraLetter table-cell\">Дополнительные буквы</p>\n            <p className=\"rule table-cell\">Правило</p>\n            <p className=\"category table-cell\">Категория</p>\n            <p className=\"importance table-cell\">Важность</p>\n            <p className=\"visibility table-cell\">Видимость</p>\n            <p className=\"actions table-cell\">Действия</p>\n          </li>\n          \n          {RULES_MOCK.map(rule => <Rule key={rule.extraLetters} handleDelete={handleDelete} rule={rule} />)}\n        </ul>\n\n        <button className=\"button\">Добавить правило</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  const [auth, setAuth] = useState(false)\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <Link\n          style={{\n            textDecoration: \"none\",\n          }}\n          to=\"/FontKeeper\"\n        >\n          <h1 className=\"main-title\">\n            <span className=\"main-title_bg\">Б</span>уква к{\" \"}\n            <span className=\"main-title_sm\">б</span>укве\n          </h1>\n        </Link>\n        {auth ? \n          <p className=\"user-nav\">\n            <Link className=\"link\" to=\"/FontKeeper/admin/rules\">\n              Администрирование\n            </Link>\n            <Link className=\"link\" to=\"/FontKeeper/profile\">\n              Профиль\n            </Link>\n            <Link className=\"link\" to=\"/\" onClick={() => setAuth(!auth)}>\n              Выход\n            </Link>\n          </p>\n          : <p className=\"user-nav\">\n              <Link className=\"link\" to=\"/FontKeeper\" onClick={() => setAuth(!auth)}>\n                Войти\n              </Link>\n            </p>  \n        }\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <h2 className=\"main-title\">\n          <span className=\"main-title_bg\">Б</span>уква к{\" \"}\n          <span className=\"main-title_sm\">б</span>укве\n        </h2>\n        <Link className=\"main-link\" to=\"/\">\n          Написать разработчикам\n        </Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react'\nimport classes from './Input.module.scss'\n\nconst Input = ({name, label, placeholder, className}) => \n    <div className={classes.inputBlock + ` ${className}`}>\n        <input className={classes.input + ' regular'} name={name} id={name} type=\"text\" placeholder={placeholder} />\n        <label className={classes.label + ' regular'} htmlFor={name}>{label}</label>\n    </div>\n\nexport default Input\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./AccountInfo.scss\";\nimport Input from \"../../../common/Input/Input\";\n\nconst AccountInfo = () => {\n  return (\n    <section className=\"accountInfo\">\n      <h3 className=\"h3\">Аккаунт</h3>\n\n      <div className=\"inputsBlock\">\n        <Input\n          className=\"input\"\n          name=\"name\"\n          label=\"Как к вам обращаться?\"\n          placeholder=\"Повелитель шрифтов\"\n        />\n        <Input\n          className=\"input\"\n          name=\"email\"\n          label=\"Font-keeper@epam.com\"\n          placeholder=\"E-mail\"\n        />\n        <Link className=\"link\" to=\"/\">\n          Изменить пароль\n        </Link>\n        <button className=\"button secondary\">Сохранить</button>\n      </div>\n    </section>\n  );\n};\n\nexport default AccountInfo;\n","export default __webpack_public_path__ + \"static/media/mockFontImg.c1e0b8c9.png\";","import React from \"react\";\nimport \"./FontExample.scss\";\n\nimport mockImg from \"../../../images/mockFontImg.png\";\n\nconst FontExample = () => (\n  <div className=\"fontExample\">\n    <img src={mockImg} className=\"fontExampleImg\" alt=\"Some meaningful text\" />\n    <p className=\"fontDescription regular\">\n      We make stunning and cool design font type which suitable for any project\n      purpose for your business. Feel free to visit our store at\n    </p>\n  </div>\n);\n\nexport default FontExample;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./MyFonts.scss\";\n\nconst MyFonts = () => {\n  return (\n    <main className=\"myFonts\">\n      <h3 className=\"h3\">Мои шрифты</h3>\n\n      <ul className=\"fontsList\">\n        {[1, 2, 3, 4].map((elem, i) => (\n          <li key={i} className=\"fontsList-item\">\n            <p className=\"fontName\">\n              <Link className=\"fontName link\" to=\"/\">\n                Obituary\n              </Link>\n            </p>\n            <p className=\"fontType\">Без засечек, Моноширинный</p>\n            <p className=\"lang\">Кирилица, Латиница</p>\n            <div className=\"about\">\n              <p className=\"usage\">Free For Personal Use</p>\n              <Link className=\"fontLink link\" to=\"/\">\n                https://pixelify.net...\n              </Link>\n            </div>\n            <div className=\"controls\">\n              <button className=\"editBtn\"></button>\n              <button className=\"deleteBtn\"></button>\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <button className=\"button\">Добавить свой шрифт</button>\n    </main>\n  );\n};\n\nexport default MyFonts;\n","import React from 'react'\nimport AccountInfo from './AccountInfo/AccountInfo'\nimport FontExample from './FontExample/FontExample'\nimport MyFonts from './MyFonts/MyFonts'\n\nimport './Profile.scss'\n\nconst Profile = () => {\n    return (\n        <div className=\"Profile\">\n            <div className=\"container\">\n                <AccountInfo/>\n                \n                <div className=\"mainContent\">\n                    <MyFonts />\n                    <FontExample />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","import React from 'react'\nimport './Font.scss'\n\nconst Font = props => {\n    const {fontName, license, source, type, lang} = props.font\n\n    return <li className=\"adminTable-item\">\n        <p className=\"fontName table-cell\">{fontName}</p>\n        <p className=\"license table-cell\">{license}</p>\n        <p className=\"source table-cell\">\n            <a className=\"link\" href={source}>{source}</a>\n        </p>\n        <p className=\"type table-cell\">{type}</p>\n        <p className=\"lang table-cell\">{lang}</p>\n        <p className=\"actions table-cell\">\n            <button className=\"seeBtn\"></button>\n            <button className=\"editBtn\"></button>\n            <button className=\"deleteBtn\"></button>\n        </p>\n    </li>\n}\n\nexport default Font\n","import React, {useEffect, useState} from \"react\";\nimport AdminControls from \"../../common/AdminControls/AdminControls\";\nimport { LIBRARY_MOCK } from \"../../constants/constants\";\nimport Font from \"./Font/Font\";\nimport \"./LibraryScreen.scss\";\n\n\nconst LibraryScreen = () => {\n  useEffect(() => {\n    fetch('https://calm-fortress-83458.herokuapp.com/api/v1/fonts')\n      .then(res => res.json())\n      .then(result => console.log(result))\n      .catch(err => console.log(err))\n  }, [])\n\n  return (\n    <div className=\"adminScreen\">\n      <div className=\"container\">\n        <AdminControls />\n\n        <ul className=\"adminTable\">\n          <li className=\"adminTable-item table-header\">\n            <p className=\"fontName table-cell\">Название</p>\n            <p className=\"license table-cell\">Лицензия</p>\n            <p className=\"source table-cell\">Источник</p>\n            <p className=\"type table-cell\">Тип</p>\n            <p className=\"lang table-cell\">Язык</p>\n            <p className=\"actions table-cell\">Действия</p>\n          </li>\n          \n          {LIBRARY_MOCK.map(font => <Font key={font.fontName} font={font} />)}\n        </ul>\n\n        <button className=\"button\">Добавить шрифт</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LibraryScreen;\n","import React from 'react'\nimport './Suggestion.scss'\n\nconst Suggestion = props => {\n    const {fontName, license, source, user, type, lang} = props.suggestion\n\n    return <li className=\"adminTable-item\">\n        <p className=\"fontName table-cell\">{fontName}</p>\n        <p className=\"license table-cell\">{license}</p>\n        <p className=\"source table-cell\">\n            <a className=\"link\" href={source}>{source}</a>\n        </p>\n        <p className=\"user table-cell\">{user}</p>\n        <p className=\"type table-cell\">{type}</p>\n        <p className=\"lang table-cell\">{lang}</p>\n        <p className=\"actions table-cell semi-wide\">\n            <button className=\"seeBtn\"></button>\n            <button className=\"editBtn\"></button>\n            <button className=\"approveBtn\"></button>\n            <button className=\"deleteBtn\"></button>\n        </p>\n    </li>\n}\n\nexport default Suggestion\n","import React from \"react\";\nimport AdminControls from \"../../common/AdminControls/AdminControls\";\nimport { SUGGESTIONS_MOCK } from \"../../constants/constants\";\nimport Suggestion from \"./Suggestion/Suggestion\";\nimport \"./SuggestionsScreen.scss\";\n\n\nconst SuggestionsScreen = () => {\n  return (\n    <div className=\"adminScreen\">\n      <div className=\"container\">\n        <AdminControls />\n\n        <ul className=\"adminTable\">\n          <li className=\"adminTable-item table-header\">\n            <p className=\"fontName table-cell\">Название</p>\n            <p className=\"license table-cell\">Лицензия</p>\n            <p className=\"source table-cell\">Источник</p>\n            <p className=\"user table-cell\">Пользователь</p>\n            <p className=\"type table-cell\">Тип</p>\n            <p className=\"lang table-cell\">Язык</p>\n            <p className=\"actions table-cell semi-wide\">Действия</p>\n          </li>\n          \n          {SUGGESTIONS_MOCK.map(suggestion => <Suggestion key={suggestion.fontName} suggestion={suggestion} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SuggestionsScreen;\n","import React from 'react'\nimport Toggle from '../../../common/Toggle/Toggle'\nimport './User.scss'\n\nconst User = (props) => {\n    const {name, email, suggested, approved, active} = props.user\n    return <li className=\"adminTable-item\">\n        <p className=\"userName table-cell wide\">{name}</p>\n        <p className=\"email table-cell wide\">{email}</p>\n        <p className=\"suggested table-cell wide\">{suggested}</p>\n        <p className=\"approved table-cell wide\">{approved}</p>\n        <div className=\"active table-cell\"><Toggle checked={active} /></div>\n    </li>\n}\nexport default User\n","import React from \"react\";\nimport AdminControls from \"../../common/AdminControls/AdminControls\";\nimport { USERS_MOCK } from \"../../constants/constants\";\nimport Suggestion from \"./User/User\";\nimport \"./UsersScreen.scss\";\n\nconst UsersScreen = () => {\n  return (\n    <div className=\"adminScreen\">\n      <div className=\"container\">\n        <AdminControls />\n\n        <ul className=\"adminTable\">\n          <li className=\"adminTable-item table-header\">\n            <p className=\"userName table-cell wide\">Обращение</p>\n            <p className=\"email table-cell wide\">E-mail</p>\n            <p className=\"suggested table-cell wide\">Предложено шрифтов</p>\n            <p className=\"approved table-cell wide\">Принято шрифтов</p>\n            <p className=\"active table-cell\">Активен</p>\n          </li>\n          \n          {USERS_MOCK.map(user => <Suggestion key={user.name} user={user} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersScreen;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainScreen from './components/main-screen/main-screen';\nimport PageNotFound from './components/page-not-found/page-not-found';\nimport './App.scss';\nimport RulesScreen from './components/RulesScreen/RulesScreen';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Profile from './components/Profile/Profile';\nimport LibraryScreen from './components/LibraryScreen/LibraryScreen';\nimport SuggestionsScreen from './components/SuggestionsScreen/SuggestionsScreen';\nimport UsersScreen from './components/UsersScreen/UsersScreen';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n\n      <Switch>\n        <Route exact path='/FontKeeper'>\n          <MainScreen />\n        </Route>\n        <Route exact path='/FontKeeper/profile'>\n          <Profile />\n        </Route>\n        <Route exact path='/FontKeeper/admin/rules'>\n          <RulesScreen />\n        </Route>\n        <Route exact path='/FontKeeper/admin/library'>\n          <LibraryScreen />\n        </Route>\n        <Route exact path='/FontKeeper/admin/rules'>\n          <RulesScreen />\n        </Route>\n        <Route exact path='/FontKeeper/admin/suggestions'>\n          <SuggestionsScreen />\n        </Route>\n        <Route exact path='/FontKeeper/admin/users'>\n          <UsersScreen />\n        </Route>\n        <Route>\n          <PageNotFound />\n        </Route>\n      </Switch>\n      \n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst browserHistory = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={browserHistory}>\n    <App />\n  </Router>,\n  document.querySelector(`#root`)\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}